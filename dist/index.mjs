import e from"lodash.get";import r from"lodash.set";import t from"lodash.isarray";import n from"lodash.isplainobject";function i(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}var o=function(e){return![!1,"false"].includes(e)&&(!![!0,"true"].includes(e)||e)},a=function(e){return["false"].includes(String(e))},u=function(e){return["true"].includes(String(e))},c=function(e){return["string"].includes(typeof e)},s=function(e){return[void 0,null].includes(e)},l=/*#__PURE__*/function(){function l(e,r){this.data=void 0,this.strict=!0,this.keepTypeof=!1,this.data=e,this.strict=null==r?void 0:r.strict,this.keepTypeof=null==r?void 0:r.keepTypeof}var f=l.prototype;return f.replaceValue=function(t,n,l,f){var p=String(n).match(/{{.*?}}/g);if(p)for(var d,v=function(e,r){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,r){if(e){if("string"==typeof e)return i(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?i(e,r):void 0}}(e))){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(p.reverse());!(d=v()).done;){var h=d.value,y=h.replace(/[{}]/g,""),m=e(f,t),g=e(l,y),b=g;s(g)&&(g=""),(a(g)||u(g))&&(g=String(g)),c(g)&&(b=m.replace(h,this.strict?g:g||"")),["number"].includes(typeof g)&&(b=m.replace(h,g),this.keepTypeof&&/^-?\.?_?\d+$/.test(b)&&(b=Number(b))),a(b)&&(b=o(b)),u(b)&&(b=o(b)),r(f,t,b)}},f.recursiveReplace=function(e,r){for(var i=this,o=0,a=Object.keys(r);o<a.length;o++){var u=a[o],c=r[u];n(c)?this.recursiveReplace(e,c):t(c)?c.map(function(r){return i.recursiveReplace(e,r)}):this.replaceValue(u,c,e,r)}return r},f.try=function(e){var r=JSON.parse(e);return this.recursiveReplace(this.data,r),r},l}();export{l as default};
//# sourceMappingURL=index.mjs.map
