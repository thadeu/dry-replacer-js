{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["import get from 'lodash.get'\nimport set from 'lodash.set'\nimport isArray from 'lodash.isarray'\nimport isPlainObject from 'lodash.isplainobject'\n\nclass DryReplacer {\n  data: object\n\n  constructor(data: object) {\n    this.data = data\n  }\n\n  replaceValue(key: string, value: any, data: object, template: object): void {\n    let matchedArray = String(value).match(/{{.*?}}/g) // extract only {{}} pattern\n\n    if (matchedArray) {\n      for (let item of matchedArray.reverse()) {\n        let patternKey = item.replace(/[{}]/g, '')\n        let spotting = get(template, key)\n\n        let valueFromData = get(data, patternKey)\n        let newValue = valueFromData\n\n        if (['string'].includes(typeof valueFromData)) {\n          newValue = spotting.replace(item, valueFromData)\n        }\n\n        set(template, key, newValue)\n      }\n    }\n  }\n\n  recursiveReplace(data: object, template: any): object {\n    for (let key of Object.keys(template)) {\n      let value = template[key]\n\n      if (isPlainObject(value)) {\n        this.recursiveReplace(data, value)\n      } else if (isArray(value)) {\n        value.map((item) => this.recursiveReplace(data, item))\n      } else {\n        this.replaceValue(key, value, data, template)\n      }\n    }\n    return template\n  }\n\n  try(jsonToParse: string): object {\n    let template = JSON.parse(jsonToParse)\n    this.recursiveReplace(this.data, template)\n\n    return template\n  }\n}\n\nexport default DryReplacer\n"],"names":["DryReplacer","data","this","_proto","prototype","replaceValue","key","value","template","matchedArray","String","match","_step","_iterator","_createForOfIteratorHelperLoose","reverse","done","item","patternKey","replace","spotting","get","valueFromData","newValue","includes","set","recursiveReplace","_this","_i","_Object$keys","Object","keys","length","isPlainObject","isArray","map","jsonToParse","JSON","parse"],"mappings":"gOAKMA,IAAWA,eAAA,WAGf,SAAYC,EAAAA,GAAYC,KAFxBD,UAAI,EAGFC,KAAKD,KAAOA,CACd,CAAC,IAAAE,EAAAH,EAAAI,UA0CA,OA1CAD,EAEDE,aAAA,SAAaC,EAAaC,EAAYN,EAAcO,GAClD,IAAgBC,EAAGC,OAAOH,GAAOI,MAAM,YAEvC,GAAIF,EACF,IAAA,IAAyCG,EAAzCC,2qBAAAC,CAAiBL,EAAaM,aAAWH,EAAAC,KAAAG,MAAA,CAAA,IAA5BC,EAAAL,EAAAL,MACPW,EAAaD,EAAKE,QAAQ,QAAS,IACnCC,EAAWC,EAAIb,EAAUF,GAEZgB,EAAGD,EAAIpB,EAAMiB,GAClBK,EAAGD,EAEX,CAAC,UAAUE,gBAAgBF,KAC7BC,EAAWH,EAASD,QAAQF,EAAMK,IAGpCG,EAAIjB,EAAUF,EAAKiB,EACpB,CAEL,EAEAG,EAAAA,iBAAA,SAAiBzB,EAAcO,GAC7B,IAAA,IAAAmB,EAAAzB,KAAA0B,EAAA,EAAAC,EAAgBC,OAAOC,KAAKvB,GAAWoB,EAAAC,EAAAG,OAAAJ,IAAA,CAAlC,IAAOtB,EAAAuB,EAAAD,GACNrB,EAAQC,EAASF,GAEjB2B,EAAc1B,GAChBL,KAAKwB,iBAAiBzB,EAAMM,GACnB2B,EAAQ3B,GACjBA,EAAM4B,IAAI,SAAClB,GAAS,OAAAU,EAAKD,iBAAiBzB,EAAMgB,EAAK,GAErDf,KAAKG,aAAaC,EAAKC,EAAON,EAAMO,EAEvC,CACD,OAAOA,CACT,EAACL,EAAA,IAED,SAAIiC,GACF,IAAI5B,EAAW6B,KAAKC,MAAMF,GAG1B,OAFAlC,KAAKwB,iBAAiBxB,KAAKD,KAAMO,GAE1BA,CACT,EAACR,CAAA,CA/Cc"}